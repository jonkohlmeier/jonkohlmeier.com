{"version":3,"file":"component---src-pages-index-js-7c5f6c0101f9ea3fc251.js","mappings":"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","sources":["webpack://jonkohlmeier/./node_modules/react-bootstrap/esm/Row.js","webpack://jonkohlmeier/./node_modules/react-bootstrap/esm/Col.js","webpack://jonkohlmeier/./src/pages/index.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Container fluid>\n        <Row>\n          {posts.map((post) => {\n            const title = post.frontmatter.title || post.fields.slug;\n            const image = getImage(post.frontmatter?.headerImage);\n            const slugId =\n              post.fields.slug\n                .replace(/^\\/+|\\/+$/g, \"\")\n                .replace(/[^A-Za-z0-9_-]/g, \"-\") || \"post\";\n\n            return (\n              <Col\n                key={post.fields.slug}\n                lg={4}\n                md={6}\n                sm={12}\n                className=\"mb-4\"\n              >\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                  aria-labelledby={`${slugId}-title`}\n                >\n                  <header>\n                    <Link\n                      to={post.fields.slug}\n                      itemProp=\"url\"\n                      className=\"post-link\"\n                    >\n                      {image && (\n                        <GatsbyImage\n                          image={image}\n                          alt={title}\n                          className=\"post-list-image\"\n                        />\n                      )}\n                      <h2 id={`${slugId}-title`}>\n                        <span itemProp=\"headline\">{title}</span>\n                      </h2>\n                    </Link>\n                    <p className=\"post-meta\">\n                      <time dateTime={post.frontmatter.dateISO}>\n                        {post.frontmatter.date}\n                      </time>\n                    </p>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          dateISO: date\n          title\n          description\n          headerImage {\n            childImageSharp {\n              gatsbyImageData(\n                layout: CONSTRAINED\n                width: 900\n                quality: 90\n                placeholder: BLURRED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = ({ location, data }) => (\n  <Seo\n    title=\"Puffs of Smoke - A blog by Jon Kohlmeier\"\n    description={data.site.siteMetadata.description}\n    pathname={location.pathname}\n  />\n);\n"],"names":["Row","bsPrefix","className","as","Component","props","ref","decoratedBsPrefix","breakpoints","minBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","displayName","Col","colProps","spans","span","offset","order","useCol","length","_ref","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","React","Layout","Container","fluid","map","post","_post$frontmatter","frontmatter","fields","slug","image","getImage","headerImage","slugId","replace","key","lg","md","sm","itemScope","itemType","Link","to","itemProp","GatsbyImage","alt","id","dateTime","dateISO","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","_ref2","Seo","pathname"],"sourceRoot":""}